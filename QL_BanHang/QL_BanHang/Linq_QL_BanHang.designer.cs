#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_BanHang
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLy_BanHang")]
	public partial class Linq_QL_BanHangDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_HDNhap(CT_HDNhap instance);
    partial void UpdateCT_HDNhap(CT_HDNhap instance);
    partial void DeleteCT_HDNhap(CT_HDNhap instance);
    partial void InsertTonKho(TonKho instance);
    partial void UpdateTonKho(TonKho instance);
    partial void DeleteTonKho(TonKho instance);
    partial void InsertCT_HDXuat(CT_HDXuat instance);
    partial void UpdateCT_HDXuat(CT_HDXuat instance);
    partial void DeleteCT_HDXuat(CT_HDXuat instance);
    partial void InsertHDNhap(HDNhap instance);
    partial void UpdateHDNhap(HDNhap instance);
    partial void DeleteHDNhap(HDNhap instance);
    partial void InsertHDXuat(HDXuat instance);
    partial void UpdateHDXuat(HDXuat instance);
    partial void DeleteHDXuat(HDXuat instance);
    partial void InsertKH(KH instance);
    partial void UpdateKH(KH instance);
    partial void DeleteKH(KH instance);
    partial void InsertKho(Kho instance);
    partial void UpdateKho(Kho instance);
    partial void DeleteKho(Kho instance);
    partial void InsertNCC(NCC instance);
    partial void UpdateNCC(NCC instance);
    partial void DeleteNCC(NCC instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public Linq_QL_BanHangDataContext() : 
				base(global::QL_BanHang.Properties.Settings.Default.QLy_BanHangConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public Linq_QL_BanHangDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq_QL_BanHangDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq_QL_BanHangDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq_QL_BanHangDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CT_HDNhap> CT_HDNhaps
		{
			get
			{
				return this.GetTable<CT_HDNhap>();
			}
		}
		
		public System.Data.Linq.Table<TonKho> TonKhos
		{
			get
			{
				return this.GetTable<TonKho>();
			}
		}
		
		public System.Data.Linq.Table<CT_HDXuat> CT_HDXuats
		{
			get
			{
				return this.GetTable<CT_HDXuat>();
			}
		}
		
		public System.Data.Linq.Table<HDNhap> HDNhaps
		{
			get
			{
				return this.GetTable<HDNhap>();
			}
		}
		
		public System.Data.Linq.Table<HDXuat> HDXuats
		{
			get
			{
				return this.GetTable<HDXuat>();
			}
		}
		
		public System.Data.Linq.Table<KH> KHs
		{
			get
			{
				return this.GetTable<KH>();
			}
		}
		
		public System.Data.Linq.Table<Kho> Khos
		{
			get
			{
				return this.GetTable<Kho>();
			}
		}
		
		public System.Data.Linq.Table<NCC> NCCs
		{
			get
			{
				return this.GetTable<NCC>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HDNhap")]
	public partial class CT_HDNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CTHDN;
		
		private string _makho;
		
		private string _masp;
		
		private int _soluong;
		
		private double _chietkhau;
		
		private double _thanhtien;
		
		private int _ID_SP;
		
		private int _ID_Kho;
		
		private int _ID_HDNhap;
		
		private EntityRef<HDNhap> _HDNhap;
		
		private EntityRef<Kho> _Kho;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CTHDNChanging(int value);
    partial void OnID_CTHDNChanged();
    partial void OnmakhoChanging(string value);
    partial void OnmakhoChanged();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OnchietkhauChanging(double value);
    partial void OnchietkhauChanged();
    partial void OnthanhtienChanging(double value);
    partial void OnthanhtienChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnID_KhoChanging(int value);
    partial void OnID_KhoChanged();
    partial void OnID_HDNhapChanging(int value);
    partial void OnID_HDNhapChanged();
    #endregion
		
		public CT_HDNhap()
		{
			this._HDNhap = default(EntityRef<HDNhap>);
			this._Kho = default(EntityRef<Kho>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CTHDN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CTHDN
		{
			get
			{
				return this._ID_CTHDN;
			}
			set
			{
				if ((this._ID_CTHDN != value))
				{
					this.OnID_CTHDNChanging(value);
					this.SendPropertyChanging();
					this._ID_CTHDN = value;
					this.SendPropertyChanged("ID_CTHDN");
					this.OnID_CTHDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makho", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string makho
		{
			get
			{
				return this._makho;
			}
			set
			{
				if ((this._makho != value))
				{
					this.OnmakhoChanging(value);
					this.SendPropertyChanging();
					this._makho = value;
					this.SendPropertyChanged("makho");
					this.OnmakhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chietkhau", DbType="Float NOT NULL")]
		public double chietkhau
		{
			get
			{
				return this._chietkhau;
			}
			set
			{
				if ((this._chietkhau != value))
				{
					this.OnchietkhauChanging(value);
					this.SendPropertyChanging();
					this._chietkhau = value;
					this.SendPropertyChanged("chietkhau");
					this.OnchietkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtien", DbType="Float NOT NULL")]
		public double thanhtien
		{
			get
			{
				return this._thanhtien;
			}
			set
			{
				if ((this._thanhtien != value))
				{
					this.OnthanhtienChanging(value);
					this.SendPropertyChanging();
					this._thanhtien = value;
					this.SendPropertyChanged("thanhtien");
					this.OnthanhtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL")]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Kho", DbType="Int NOT NULL")]
		public int ID_Kho
		{
			get
			{
				return this._ID_Kho;
			}
			set
			{
				if ((this._ID_Kho != value))
				{
					if (this._Kho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KhoChanging(value);
					this.SendPropertyChanging();
					this._ID_Kho = value;
					this.SendPropertyChanged("ID_Kho");
					this.OnID_KhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HDNhap", DbType="Int NOT NULL")]
		public int ID_HDNhap
		{
			get
			{
				return this._ID_HDNhap;
			}
			set
			{
				if ((this._ID_HDNhap != value))
				{
					if (this._HDNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HDNhapChanging(value);
					this.SendPropertyChanging();
					this._ID_HDNhap = value;
					this.SendPropertyChanged("ID_HDNhap");
					this.OnID_HDNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDNhap_CT_HDNhap", Storage="_HDNhap", ThisKey="ID_HDNhap", OtherKey="ID_HDNhap", IsForeignKey=true)]
		public HDNhap HDNhap
		{
			get
			{
				return this._HDNhap.Entity;
			}
			set
			{
				HDNhap previousValue = this._HDNhap.Entity;
				if (((previousValue != value) 
							|| (this._HDNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDNhap.Entity = null;
						previousValue.CT_HDNhaps.Remove(this);
					}
					this._HDNhap.Entity = value;
					if ((value != null))
					{
						value.CT_HDNhaps.Add(this);
						this._ID_HDNhap = value.ID_HDNhap;
					}
					else
					{
						this._ID_HDNhap = default(int);
					}
					this.SendPropertyChanged("HDNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_CT_HDNhap", Storage="_Kho", ThisKey="ID_Kho", OtherKey="ID_Kho", IsForeignKey=true)]
		public Kho Kho
		{
			get
			{
				return this._Kho.Entity;
			}
			set
			{
				Kho previousValue = this._Kho.Entity;
				if (((previousValue != value) 
							|| (this._Kho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kho.Entity = null;
						previousValue.CT_HDNhaps.Remove(this);
					}
					this._Kho.Entity = value;
					if ((value != null))
					{
						value.CT_HDNhaps.Add(this);
						this._ID_Kho = value.ID_Kho;
					}
					else
					{
						this._ID_Kho = default(int);
					}
					this.SendPropertyChanged("Kho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CT_HDNhap", Storage="_SanPham", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CT_HDNhaps.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CT_HDNhaps.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TonKho")]
	public partial class TonKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Kho;
		
		private int _ID_SP;
		
		private int _soluong;
		
		private EntityRef<Kho> _Kho;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KhoChanging(int value);
    partial void OnID_KhoChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    #endregion
		
		public TonKho()
		{
			this._Kho = default(EntityRef<Kho>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Kho", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Kho
		{
			get
			{
				return this._ID_Kho;
			}
			set
			{
				if ((this._ID_Kho != value))
				{
					if (this._Kho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KhoChanging(value);
					this.SendPropertyChanging();
					this._ID_Kho = value;
					this.SendPropertyChanged("ID_Kho");
					this.OnID_KhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_TonKho", Storage="_Kho", ThisKey="ID_Kho", OtherKey="ID_Kho", IsForeignKey=true)]
		public Kho Kho
		{
			get
			{
				return this._Kho.Entity;
			}
			set
			{
				Kho previousValue = this._Kho.Entity;
				if (((previousValue != value) 
							|| (this._Kho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kho.Entity = null;
						previousValue.TonKhos.Remove(this);
					}
					this._Kho.Entity = value;
					if ((value != null))
					{
						value.TonKhos.Add(this);
						this._ID_Kho = value.ID_Kho;
					}
					else
					{
						this._ID_Kho = default(int);
					}
					this.SendPropertyChanged("Kho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_TonKho", Storage="_SanPham", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.TonKhos.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.TonKhos.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HDXuat")]
	public partial class CT_HDXuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_CTHDX;
		
		private string _makho;
		
		private string _masp;
		
		private int _soluong;
		
		private double _chietkhau;
		
		private double _thanhtien;
		
		private int _ID_SP;
		
		private int _ID_Kho;
		
		private int _ID_HDXuat;
		
		private EntityRef<HDXuat> _HDXuat;
		
		private EntityRef<Kho> _Kho;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CTHDXChanging(int value);
    partial void OnID_CTHDXChanged();
    partial void OnmakhoChanging(string value);
    partial void OnmakhoChanged();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OnsoluongChanging(int value);
    partial void OnsoluongChanged();
    partial void OnchietkhauChanging(double value);
    partial void OnchietkhauChanged();
    partial void OnthanhtienChanging(double value);
    partial void OnthanhtienChanged();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnID_KhoChanging(int value);
    partial void OnID_KhoChanged();
    partial void OnID_HDXuatChanging(int value);
    partial void OnID_HDXuatChanged();
    #endregion
		
		public CT_HDXuat()
		{
			this._HDXuat = default(EntityRef<HDXuat>);
			this._Kho = default(EntityRef<Kho>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CTHDX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_CTHDX
		{
			get
			{
				return this._ID_CTHDX;
			}
			set
			{
				if ((this._ID_CTHDX != value))
				{
					this.OnID_CTHDXChanging(value);
					this.SendPropertyChanging();
					this._ID_CTHDX = value;
					this.SendPropertyChanged("ID_CTHDX");
					this.OnID_CTHDXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makho", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string makho
		{
			get
			{
				return this._makho;
			}
			set
			{
				if ((this._makho != value))
				{
					this.OnmakhoChanging(value);
					this.SendPropertyChanging();
					this._makho = value;
					this.SendPropertyChanged("makho");
					this.OnmakhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int NOT NULL")]
		public int soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this.OnsoluongChanging(value);
					this.SendPropertyChanging();
					this._soluong = value;
					this.SendPropertyChanged("soluong");
					this.OnsoluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chietkhau", DbType="Float NOT NULL")]
		public double chietkhau
		{
			get
			{
				return this._chietkhau;
			}
			set
			{
				if ((this._chietkhau != value))
				{
					this.OnchietkhauChanging(value);
					this.SendPropertyChanging();
					this._chietkhau = value;
					this.SendPropertyChanged("chietkhau");
					this.OnchietkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtien", DbType="Float NOT NULL")]
		public double thanhtien
		{
			get
			{
				return this._thanhtien;
			}
			set
			{
				if ((this._thanhtien != value))
				{
					this.OnthanhtienChanging(value);
					this.SendPropertyChanging();
					this._thanhtien = value;
					this.SendPropertyChanged("thanhtien");
					this.OnthanhtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", DbType="Int NOT NULL")]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Kho", DbType="Int NOT NULL")]
		public int ID_Kho
		{
			get
			{
				return this._ID_Kho;
			}
			set
			{
				if ((this._ID_Kho != value))
				{
					if (this._Kho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KhoChanging(value);
					this.SendPropertyChanging();
					this._ID_Kho = value;
					this.SendPropertyChanged("ID_Kho");
					this.OnID_KhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HDXuat", DbType="Int NOT NULL")]
		public int ID_HDXuat
		{
			get
			{
				return this._ID_HDXuat;
			}
			set
			{
				if ((this._ID_HDXuat != value))
				{
					if (this._HDXuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_HDXuatChanging(value);
					this.SendPropertyChanging();
					this._ID_HDXuat = value;
					this.SendPropertyChanged("ID_HDXuat");
					this.OnID_HDXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDXuat_CT_HDXuat", Storage="_HDXuat", ThisKey="ID_HDXuat", OtherKey="ID_HDXuat", IsForeignKey=true)]
		public HDXuat HDXuat
		{
			get
			{
				return this._HDXuat.Entity;
			}
			set
			{
				HDXuat previousValue = this._HDXuat.Entity;
				if (((previousValue != value) 
							|| (this._HDXuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HDXuat.Entity = null;
						previousValue.CT_HDXuats.Remove(this);
					}
					this._HDXuat.Entity = value;
					if ((value != null))
					{
						value.CT_HDXuats.Add(this);
						this._ID_HDXuat = value.ID_HDXuat;
					}
					else
					{
						this._ID_HDXuat = default(int);
					}
					this.SendPropertyChanged("HDXuat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_CT_HDXuat", Storage="_Kho", ThisKey="ID_Kho", OtherKey="ID_Kho", IsForeignKey=true)]
		public Kho Kho
		{
			get
			{
				return this._Kho.Entity;
			}
			set
			{
				Kho previousValue = this._Kho.Entity;
				if (((previousValue != value) 
							|| (this._Kho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kho.Entity = null;
						previousValue.CT_HDXuats.Remove(this);
					}
					this._Kho.Entity = value;
					if ((value != null))
					{
						value.CT_HDXuats.Add(this);
						this._ID_Kho = value.ID_Kho;
					}
					else
					{
						this._ID_Kho = default(int);
					}
					this.SendPropertyChanged("Kho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CT_HDXuat", Storage="_SanPham", ThisKey="ID_SP", OtherKey="ID_SP", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.CT_HDXuats.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.CT_HDXuats.Add(this);
						this._ID_SP = value.ID_SP;
					}
					else
					{
						this._ID_SP = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HDNhap")]
	public partial class HDNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HDNhap;
		
		private string _sophieunhap;
		
		private System.DateTime _ngaytao;
		
		private int _ID_NCC;
		
		private string _mancc;
		
		private EntitySet<CT_HDNhap> _CT_HDNhaps;
		
		private EntityRef<NCC> _NCC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HDNhapChanging(int value);
    partial void OnID_HDNhapChanged();
    partial void OnsophieunhapChanging(string value);
    partial void OnsophieunhapChanged();
    partial void OnngaytaoChanging(System.DateTime value);
    partial void OnngaytaoChanged();
    partial void OnID_NCCChanging(int value);
    partial void OnID_NCCChanged();
    partial void OnmanccChanging(string value);
    partial void OnmanccChanged();
    #endregion
		
		public HDNhap()
		{
			this._CT_HDNhaps = new EntitySet<CT_HDNhap>(new Action<CT_HDNhap>(this.attach_CT_HDNhaps), new Action<CT_HDNhap>(this.detach_CT_HDNhaps));
			this._NCC = default(EntityRef<NCC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HDNhap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_HDNhap
		{
			get
			{
				return this._ID_HDNhap;
			}
			set
			{
				if ((this._ID_HDNhap != value))
				{
					this.OnID_HDNhapChanging(value);
					this.SendPropertyChanging();
					this._ID_HDNhap = value;
					this.SendPropertyChanged("ID_HDNhap");
					this.OnID_HDNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sophieunhap", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sophieunhap
		{
			get
			{
				return this._sophieunhap;
			}
			set
			{
				if ((this._sophieunhap != value))
				{
					this.OnsophieunhapChanging(value);
					this.SendPropertyChanging();
					this._sophieunhap = value;
					this.SendPropertyChanged("sophieunhap");
					this.OnsophieunhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaytao", DbType="Date NOT NULL")]
		public System.DateTime ngaytao
		{
			get
			{
				return this._ngaytao;
			}
			set
			{
				if ((this._ngaytao != value))
				{
					this.OnngaytaoChanging(value);
					this.SendPropertyChanging();
					this._ngaytao = value;
					this.SendPropertyChanged("ngaytao");
					this.OnngaytaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", DbType="Int NOT NULL")]
		public int ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					if (this._NCC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mancc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mancc
		{
			get
			{
				return this._mancc;
			}
			set
			{
				if ((this._mancc != value))
				{
					this.OnmanccChanging(value);
					this.SendPropertyChanging();
					this._mancc = value;
					this.SendPropertyChanged("mancc");
					this.OnmanccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDNhap_CT_HDNhap", Storage="_CT_HDNhaps", ThisKey="ID_HDNhap", OtherKey="ID_HDNhap")]
		public EntitySet<CT_HDNhap> CT_HDNhaps
		{
			get
			{
				return this._CT_HDNhaps;
			}
			set
			{
				this._CT_HDNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_HDNhap", Storage="_NCC", ThisKey="ID_NCC", OtherKey="ID_NCC", IsForeignKey=true)]
		public NCC NCC
		{
			get
			{
				return this._NCC.Entity;
			}
			set
			{
				NCC previousValue = this._NCC.Entity;
				if (((previousValue != value) 
							|| (this._NCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NCC.Entity = null;
						previousValue.HDNhaps.Remove(this);
					}
					this._NCC.Entity = value;
					if ((value != null))
					{
						value.HDNhaps.Add(this);
						this._ID_NCC = value.ID_NCC;
					}
					else
					{
						this._ID_NCC = default(int);
					}
					this.SendPropertyChanged("NCC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDNhaps(CT_HDNhap entity)
		{
			this.SendPropertyChanging();
			entity.HDNhap = this;
		}
		
		private void detach_CT_HDNhaps(CT_HDNhap entity)
		{
			this.SendPropertyChanging();
			entity.HDNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HDXuat")]
	public partial class HDXuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_HDXuat;
		
		private string _sophieuxuat;
		
		private System.DateTime _ngaytao;
		
		private int _ID_KH;
		
		private string _makh;
		
		private EntitySet<CT_HDXuat> _CT_HDXuats;
		
		private EntityRef<KH> _KH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_HDXuatChanging(int value);
    partial void OnID_HDXuatChanged();
    partial void OnsophieuxuatChanging(string value);
    partial void OnsophieuxuatChanged();
    partial void OnngaytaoChanging(System.DateTime value);
    partial void OnngaytaoChanged();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnmakhChanging(string value);
    partial void OnmakhChanged();
    #endregion
		
		public HDXuat()
		{
			this._CT_HDXuats = new EntitySet<CT_HDXuat>(new Action<CT_HDXuat>(this.attach_CT_HDXuats), new Action<CT_HDXuat>(this.detach_CT_HDXuats));
			this._KH = default(EntityRef<KH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HDXuat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_HDXuat
		{
			get
			{
				return this._ID_HDXuat;
			}
			set
			{
				if ((this._ID_HDXuat != value))
				{
					this.OnID_HDXuatChanging(value);
					this.SendPropertyChanging();
					this._ID_HDXuat = value;
					this.SendPropertyChanged("ID_HDXuat");
					this.OnID_HDXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sophieuxuat", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sophieuxuat
		{
			get
			{
				return this._sophieuxuat;
			}
			set
			{
				if ((this._sophieuxuat != value))
				{
					this.OnsophieuxuatChanging(value);
					this.SendPropertyChanging();
					this._sophieuxuat = value;
					this.SendPropertyChanged("sophieuxuat");
					this.OnsophieuxuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaytao", DbType="Date NOT NULL")]
		public System.DateTime ngaytao
		{
			get
			{
				return this._ngaytao;
			}
			set
			{
				if ((this._ngaytao != value))
				{
					this.OnngaytaoChanging(value);
					this.SendPropertyChanging();
					this._ngaytao = value;
					this.SendPropertyChanged("ngaytao");
					this.OnngaytaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", DbType="Int NOT NULL")]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					if (this._KH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makh", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string makh
		{
			get
			{
				return this._makh;
			}
			set
			{
				if ((this._makh != value))
				{
					this.OnmakhChanging(value);
					this.SendPropertyChanging();
					this._makh = value;
					this.SendPropertyChanged("makh");
					this.OnmakhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HDXuat_CT_HDXuat", Storage="_CT_HDXuats", ThisKey="ID_HDXuat", OtherKey="ID_HDXuat")]
		public EntitySet<CT_HDXuat> CT_HDXuats
		{
			get
			{
				return this._CT_HDXuats;
			}
			set
			{
				this._CT_HDXuats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KH_HDXuat", Storage="_KH", ThisKey="ID_KH", OtherKey="ID_KH", IsForeignKey=true)]
		public KH KH
		{
			get
			{
				return this._KH.Entity;
			}
			set
			{
				KH previousValue = this._KH.Entity;
				if (((previousValue != value) 
							|| (this._KH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KH.Entity = null;
						previousValue.HDXuats.Remove(this);
					}
					this._KH.Entity = value;
					if ((value != null))
					{
						value.HDXuats.Add(this);
						this._ID_KH = value.ID_KH;
					}
					else
					{
						this._ID_KH = default(int);
					}
					this.SendPropertyChanged("KH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDXuats(CT_HDXuat entity)
		{
			this.SendPropertyChanging();
			entity.HDXuat = this;
		}
		
		private void detach_CT_HDXuats(CT_HDXuat entity)
		{
			this.SendPropertyChanging();
			entity.HDXuat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KH")]
	public partial class KH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_KH;
		
		private string _makh;
		
		private string _tenkh;
		
		private string _diachi;
		
		private string _sdt;
		
		private string _gioitinh;
		
		private double _masothue;
		
		private EntitySet<HDXuat> _HDXuats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KHChanging(int value);
    partial void OnID_KHChanged();
    partial void OnmakhChanging(string value);
    partial void OnmakhChanged();
    partial void OntenkhChanging(string value);
    partial void OntenkhChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OngioitinhChanging(string value);
    partial void OngioitinhChanged();
    partial void OnmasothueChanging(double value);
    partial void OnmasothueChanged();
    #endregion
		
		public KH()
		{
			this._HDXuats = new EntitySet<HDXuat>(new Action<HDXuat>(this.attach_HDXuats), new Action<HDXuat>(this.detach_HDXuats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_KH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_KH
		{
			get
			{
				return this._ID_KH;
			}
			set
			{
				if ((this._ID_KH != value))
				{
					this.OnID_KHChanging(value);
					this.SendPropertyChanging();
					this._ID_KH = value;
					this.SendPropertyChanged("ID_KH");
					this.OnID_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makh", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string makh
		{
			get
			{
				return this._makh;
			}
			set
			{
				if ((this._makh != value))
				{
					this.OnmakhChanging(value);
					this.SendPropertyChanging();
					this._makh = value;
					this.SendPropertyChanged("makh");
					this.OnmakhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenkh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenkh
		{
			get
			{
				return this._tenkh;
			}
			set
			{
				if ((this._tenkh != value))
				{
					this.OntenkhChanging(value);
					this.SendPropertyChanging();
					this._tenkh = value;
					this.SendPropertyChanged("tenkh");
					this.OntenkhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioitinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string gioitinh
		{
			get
			{
				return this._gioitinh;
			}
			set
			{
				if ((this._gioitinh != value))
				{
					this.OngioitinhChanging(value);
					this.SendPropertyChanging();
					this._gioitinh = value;
					this.SendPropertyChanged("gioitinh");
					this.OngioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masothue", DbType="Float NOT NULL")]
		public double masothue
		{
			get
			{
				return this._masothue;
			}
			set
			{
				if ((this._masothue != value))
				{
					this.OnmasothueChanging(value);
					this.SendPropertyChanging();
					this._masothue = value;
					this.SendPropertyChanged("masothue");
					this.OnmasothueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KH_HDXuat", Storage="_HDXuats", ThisKey="ID_KH", OtherKey="ID_KH")]
		public EntitySet<HDXuat> HDXuats
		{
			get
			{
				return this._HDXuats;
			}
			set
			{
				this._HDXuats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HDXuats(HDXuat entity)
		{
			this.SendPropertyChanging();
			entity.KH = this;
		}
		
		private void detach_HDXuats(HDXuat entity)
		{
			this.SendPropertyChanging();
			entity.KH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kho")]
	public partial class Kho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Kho;
		
		private string _makho;
		
		private string _tenkho;
		
		private EntitySet<CT_HDNhap> _CT_HDNhaps;
		
		private EntitySet<TonKho> _TonKhos;
		
		private EntitySet<CT_HDXuat> _CT_HDXuats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_KhoChanging(int value);
    partial void OnID_KhoChanged();
    partial void OnmakhoChanging(string value);
    partial void OnmakhoChanged();
    partial void OntenkhoChanging(string value);
    partial void OntenkhoChanged();
    #endregion
		
		public Kho()
		{
			this._CT_HDNhaps = new EntitySet<CT_HDNhap>(new Action<CT_HDNhap>(this.attach_CT_HDNhaps), new Action<CT_HDNhap>(this.detach_CT_HDNhaps));
			this._TonKhos = new EntitySet<TonKho>(new Action<TonKho>(this.attach_TonKhos), new Action<TonKho>(this.detach_TonKhos));
			this._CT_HDXuats = new EntitySet<CT_HDXuat>(new Action<CT_HDXuat>(this.attach_CT_HDXuats), new Action<CT_HDXuat>(this.detach_CT_HDXuats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Kho", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Kho
		{
			get
			{
				return this._ID_Kho;
			}
			set
			{
				if ((this._ID_Kho != value))
				{
					this.OnID_KhoChanging(value);
					this.SendPropertyChanging();
					this._ID_Kho = value;
					this.SendPropertyChanged("ID_Kho");
					this.OnID_KhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makho", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string makho
		{
			get
			{
				return this._makho;
			}
			set
			{
				if ((this._makho != value))
				{
					this.OnmakhoChanging(value);
					this.SendPropertyChanging();
					this._makho = value;
					this.SendPropertyChanged("makho");
					this.OnmakhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenkho", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenkho
		{
			get
			{
				return this._tenkho;
			}
			set
			{
				if ((this._tenkho != value))
				{
					this.OntenkhoChanging(value);
					this.SendPropertyChanging();
					this._tenkho = value;
					this.SendPropertyChanged("tenkho");
					this.OntenkhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_CT_HDNhap", Storage="_CT_HDNhaps", ThisKey="ID_Kho", OtherKey="ID_Kho")]
		public EntitySet<CT_HDNhap> CT_HDNhaps
		{
			get
			{
				return this._CT_HDNhaps;
			}
			set
			{
				this._CT_HDNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_TonKho", Storage="_TonKhos", ThisKey="ID_Kho", OtherKey="ID_Kho")]
		public EntitySet<TonKho> TonKhos
		{
			get
			{
				return this._TonKhos;
			}
			set
			{
				this._TonKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_CT_HDXuat", Storage="_CT_HDXuats", ThisKey="ID_Kho", OtherKey="ID_Kho")]
		public EntitySet<CT_HDXuat> CT_HDXuats
		{
			get
			{
				return this._CT_HDXuats;
			}
			set
			{
				this._CT_HDXuats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDNhaps(CT_HDNhap entity)
		{
			this.SendPropertyChanging();
			entity.Kho = this;
		}
		
		private void detach_CT_HDNhaps(CT_HDNhap entity)
		{
			this.SendPropertyChanging();
			entity.Kho = null;
		}
		
		private void attach_TonKhos(TonKho entity)
		{
			this.SendPropertyChanging();
			entity.Kho = this;
		}
		
		private void detach_TonKhos(TonKho entity)
		{
			this.SendPropertyChanging();
			entity.Kho = null;
		}
		
		private void attach_CT_HDXuats(CT_HDXuat entity)
		{
			this.SendPropertyChanging();
			entity.Kho = this;
		}
		
		private void detach_CT_HDXuats(CT_HDXuat entity)
		{
			this.SendPropertyChanging();
			entity.Kho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCC")]
	public partial class NCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_NCC;
		
		private string _mancc;
		
		private string _tenncc;
		
		private string _diachi;
		
		private string _sdt;
		
		private EntitySet<HDNhap> _HDNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_NCCChanging(int value);
    partial void OnID_NCCChanged();
    partial void OnmanccChanging(string value);
    partial void OnmanccChanged();
    partial void OntennccChanging(string value);
    partial void OntennccChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    #endregion
		
		public NCC()
		{
			this._HDNhaps = new EntitySet<HDNhap>(new Action<HDNhap>(this.attach_HDNhaps), new Action<HDNhap>(this.detach_HDNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_NCC
		{
			get
			{
				return this._ID_NCC;
			}
			set
			{
				if ((this._ID_NCC != value))
				{
					this.OnID_NCCChanging(value);
					this.SendPropertyChanging();
					this._ID_NCC = value;
					this.SendPropertyChanged("ID_NCC");
					this.OnID_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mancc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mancc
		{
			get
			{
				return this._mancc;
			}
			set
			{
				if ((this._mancc != value))
				{
					this.OnmanccChanging(value);
					this.SendPropertyChanging();
					this._mancc = value;
					this.SendPropertyChanged("mancc");
					this.OnmanccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenncc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string tenncc
		{
			get
			{
				return this._tenncc;
			}
			set
			{
				if ((this._tenncc != value))
				{
					this.OntennccChanging(value);
					this.SendPropertyChanging();
					this._tenncc = value;
					this.SendPropertyChanged("tenncc");
					this.OntennccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_HDNhap", Storage="_HDNhaps", ThisKey="ID_NCC", OtherKey="ID_NCC")]
		public EntitySet<HDNhap> HDNhaps
		{
			get
			{
				return this._HDNhaps;
			}
			set
			{
				this._HDNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HDNhaps(HDNhap entity)
		{
			this.SendPropertyChanging();
			entity.NCC = this;
		}
		
		private void detach_HDNhaps(HDNhap entity)
		{
			this.SendPropertyChanging();
			entity.NCC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_SP;
		
		private string _masp;
		
		private string _tensp;
		
		private string _donvi;
		
		private double _dongia;
		
		private System.DateTime _ngaytao;
		
		private EntitySet<CT_HDNhap> _CT_HDNhaps;
		
		private EntitySet<TonKho> _TonKhos;
		
		private EntitySet<CT_HDXuat> _CT_HDXuats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SPChanging(int value);
    partial void OnID_SPChanged();
    partial void OnmaspChanging(string value);
    partial void OnmaspChanged();
    partial void OntenspChanging(string value);
    partial void OntenspChanged();
    partial void OndonviChanging(string value);
    partial void OndonviChanged();
    partial void OndongiaChanging(double value);
    partial void OndongiaChanged();
    partial void OnngaytaoChanging(System.DateTime value);
    partial void OnngaytaoChanged();
    #endregion
		
		public SanPham()
		{
			this._CT_HDNhaps = new EntitySet<CT_HDNhap>(new Action<CT_HDNhap>(this.attach_CT_HDNhaps), new Action<CT_HDNhap>(this.detach_CT_HDNhaps));
			this._TonKhos = new EntitySet<TonKho>(new Action<TonKho>(this.attach_TonKhos), new Action<TonKho>(this.detach_TonKhos));
			this._CT_HDXuats = new EntitySet<CT_HDXuat>(new Action<CT_HDXuat>(this.attach_CT_HDXuats), new Action<CT_HDXuat>(this.detach_CT_HDXuats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_SP
		{
			get
			{
				return this._ID_SP;
			}
			set
			{
				if ((this._ID_SP != value))
				{
					this.OnID_SPChanging(value);
					this.SendPropertyChanging();
					this._ID_SP = value;
					this.SendPropertyChanged("ID_SP");
					this.OnID_SPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_masp", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string masp
		{
			get
			{
				return this._masp;
			}
			set
			{
				if ((this._masp != value))
				{
					this.OnmaspChanging(value);
					this.SendPropertyChanging();
					this._masp = value;
					this.SendPropertyChanged("masp");
					this.OnmaspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tensp", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tensp
		{
			get
			{
				return this._tensp;
			}
			set
			{
				if ((this._tensp != value))
				{
					this.OntenspChanging(value);
					this.SendPropertyChanging();
					this._tensp = value;
					this.SendPropertyChanged("tensp");
					this.OntenspChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donvi", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string donvi
		{
			get
			{
				return this._donvi;
			}
			set
			{
				if ((this._donvi != value))
				{
					this.OndonviChanging(value);
					this.SendPropertyChanging();
					this._donvi = value;
					this.SendPropertyChanged("donvi");
					this.OndonviChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dongia", DbType="Float NOT NULL")]
		public double dongia
		{
			get
			{
				return this._dongia;
			}
			set
			{
				if ((this._dongia != value))
				{
					this.OndongiaChanging(value);
					this.SendPropertyChanging();
					this._dongia = value;
					this.SendPropertyChanged("dongia");
					this.OndongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaytao", DbType="Date NOT NULL")]
		public System.DateTime ngaytao
		{
			get
			{
				return this._ngaytao;
			}
			set
			{
				if ((this._ngaytao != value))
				{
					this.OnngaytaoChanging(value);
					this.SendPropertyChanging();
					this._ngaytao = value;
					this.SendPropertyChanged("ngaytao");
					this.OnngaytaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CT_HDNhap", Storage="_CT_HDNhaps", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CT_HDNhap> CT_HDNhaps
		{
			get
			{
				return this._CT_HDNhaps;
			}
			set
			{
				this._CT_HDNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_TonKho", Storage="_TonKhos", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<TonKho> TonKhos
		{
			get
			{
				return this._TonKhos;
			}
			set
			{
				this._TonKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_CT_HDXuat", Storage="_CT_HDXuats", ThisKey="ID_SP", OtherKey="ID_SP")]
		public EntitySet<CT_HDXuat> CT_HDXuats
		{
			get
			{
				return this._CT_HDXuats;
			}
			set
			{
				this._CT_HDXuats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HDNhaps(CT_HDNhap entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CT_HDNhaps(CT_HDNhap entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_TonKhos(TonKho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_TonKhos(TonKho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_CT_HDXuats(CT_HDXuat entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_CT_HDXuats(CT_HDXuat entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TK;
		
		private string _username;
		
		private string _password;
		
		private string _hoten;
		
		private string _diachi;
		
		private System.DateTime _ngaysinh;
		
		private string _sdt;
		
		private string _gioitinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TKChanging(int value);
    partial void OnID_TKChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnhotenChanging(string value);
    partial void OnhotenChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OnngaysinhChanging(System.DateTime value);
    partial void OnngaysinhChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OngioitinhChanging(string value);
    partial void OngioitinhChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoten", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string hoten
		{
			get
			{
				return this._hoten;
			}
			set
			{
				if ((this._hoten != value))
				{
					this.OnhotenChanging(value);
					this.SendPropertyChanging();
					this._hoten = value;
					this.SendPropertyChanged("hoten");
					this.OnhotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaysinh", DbType="Date NOT NULL")]
		public System.DateTime ngaysinh
		{
			get
			{
				return this._ngaysinh;
			}
			set
			{
				if ((this._ngaysinh != value))
				{
					this.OnngaysinhChanging(value);
					this.SendPropertyChanging();
					this._ngaysinh = value;
					this.SendPropertyChanged("ngaysinh");
					this.OnngaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioitinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string gioitinh
		{
			get
			{
				return this._gioitinh;
			}
			set
			{
				if ((this._gioitinh != value))
				{
					this.OngioitinhChanging(value);
					this.SendPropertyChanging();
					this._gioitinh = value;
					this.SendPropertyChanged("gioitinh");
					this.OngioitinhChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
